{"ast":null,"code":"var _jsxFileName = \"/home/fronrich/vs-workspace/Portfolio/client/src/components/gui/gui.js\";\nimport React, { useState } from 'react';\nimport SocialBar from './social/socialBar';\nimport Menu from './menu/menu';\n/**\n * The most frontfacing GUI\n * @param {Number Array} props.theme - theme colors\n * @param {Function} props.routeState - determine visibility of header\n * @param {String Array} props.elements - elements to render\n * @returns top layer gui\n */\n\nexport default function gui(props) {\n  //state management\n  const [blur, setBlur] = useState(false);\n\n  let toggle = function routeState() {\n    setBlur(!blur);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `Layer GUI`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, createInner(props.theme, toggle, props.elements));\n} // generate inner componenets based on constants provided\n\nfunction createInner(theme, routeState, elements) {\n  // const of element types\n  const ELEMENT_CONSTANTS = {\n    \"Menu\": /*#__PURE__*/React.createElement(Menu, {\n      colorID: theme,\n      handler: routeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }),\n    \"Social\": /*#__PURE__*/React.createElement(SocialBar, {\n      colorID: theme[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    })\n  }; // render elements\n\n  let list = [];\n  elements.forEach(string => list.push(ELEMENT_CONSTANTS[string])); // return list\n\n  return list;\n}","map":{"version":3,"sources":["/home/fronrich/vs-workspace/Portfolio/client/src/components/gui/gui.js"],"names":["React","useState","SocialBar","Menu","gui","props","blur","setBlur","toggle","routeState","createInner","theme","elements","ELEMENT_CONSTANTS","list","forEach","string","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA;;;;;;;;AAOA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAEjC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;;AACA,MAAIO,MAAM,GAAG,SAASC,UAAT,GAAsB;AACjCF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAG,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGI,WAAW,CAACL,KAAK,CAACM,KAAP,EAAcH,MAAd,EAAsBH,KAAK,CAACO,QAA5B,CAHd,CADF;AAOD,C,CAED;;AACA,SAASF,WAAT,CAAqBC,KAArB,EAA4BF,UAA5B,EAAwCG,QAAxC,EAAkD;AAChD;AACA,QAAMC,iBAAiB,GAAG;AACxB,yBACE,oBAAC,IAAD;AACE,MAAA,OAAO,EAAEF,KADX;AAEE,MAAA,OAAO,EAAEF,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFsB;AAOxB,2BACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAEE,KAAK,CAAC,CAAD,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARsB,GAA1B,CAFgD,CAgBhD;;AACA,MAAIG,IAAI,GAAG,EAAX;AACAF,EAAAA,QAAQ,CAACG,OAAT,CAAkBC,MAAD,IACfF,IAAI,CAACG,IAAL,CACEJ,iBAAiB,CAACG,MAAD,CADnB,CADF,EAlBgD,CAwBhD;;AACA,SAAOF,IAAP;AACD","sourcesContent":["import React, {useState} from 'react'\n\nimport SocialBar from './social/socialBar'\nimport Menu from './menu/menu'\n\n/**\n * The most frontfacing GUI\n * @param {Number Array} props.theme - theme colors\n * @param {Function} props.routeState - determine visibility of header\n * @param {String Array} props.elements - elements to render\n * @returns top layer gui\n */\nexport default function gui(props) {\n\n  //state management\n  const [blur, setBlur] = useState(false);\n  let toggle = function routeState() {\n    setBlur(!blur);\n  }\n\n  return (\n    <div \n      className={`Layer GUI`}\n    >\n      {createInner(props.theme, toggle, props.elements)}\n    </div>\n  )\n}\n\n// generate inner componenets based on constants provided\nfunction createInner(theme, routeState, elements) {\n  // const of element types\n  const ELEMENT_CONSTANTS = {\n    \"Menu\" : (\n      <Menu \n        colorID={theme} \n        handler={routeState}\n      />\n    ),\n    \"Social\" : (\n      <SocialBar \n        colorID={theme[1]}\n      />\n    )\n  }\n\n  // render elements\n  let list = []\n  elements.forEach((string) => (\n    list.push(\n      ELEMENT_CONSTANTS[string]\n    )\n  ))\n\n  // return list\n  return list\n}\n"]},"metadata":{},"sourceType":"module"}